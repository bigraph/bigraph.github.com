<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>User Manual - BigMC Bigraphical Model Checker</title>
<link rel="stylesheet" type="text/css" href="../style.css" media="screen" />
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-10255629-8']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>
<body>
<div id="header">
<h1>BigMC -- Bigraphical Model Checker</h1>
 <div id="menu">
  <ul id="nav">
   <li><a href="/bigmc/">Home</a></li>
   <li><a href="index.html">Manual</a></li>
   <li><a href="https://github.com/bigmc/bigmc">GitHub</a></li>
  </ul>
 </div>
</div>
<div id="content">
<div id="right">


<div class="node">
<p>
<a name="Example"></a>
Next:&nbsp;<a rel="next" accesskey="n" href="Table-of-Contents#Table-of-Contents">Table of Contents</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Checking#Checking">Checking</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="index#Top">Top</a>
<hr>
</div>

<h2 class="chapter">8 Example</h2>

<p>This example can be found in <samp><span class="file">doc/examples/airport2.bgm</span></samp> in the BigMC distribution.

<pre class="example">     #######################################################################
     # Airport Example #2
     # Gian Perrone, August 2011
     #
     # This is a very crude model of an airport with two passengers.
     # Passengers travel to their flights through a series of steps,
     # and enter a gate based upon their associated record in the
     # passenger database.
     ######################## Definitions Section ##########################
     # We distinguish landside and airside
     
     %active Landside : 0;
     %active Airside : 0;
     %active Gates : 0;
     
     # We distinguish zone types
     # The two links are [identifier, exit]
     
     %active Zone : 2;
     
     # A gate is simply linked to a flight
     %active Gate : 1;
     
     # A passenger is linked to a flight
     %passive Pax : 1;
     
     # The database store
     %active DB : 0;
     %active PaxRecord : 2; # Links [passenger,gate]
     
     # Names that represent zones
     %name CheckIn;
     %name Security;
     %name DutyFree;
     %name GateLounge;
     
     # A gate status at the departure lounge
     %name Boarding;
     
     # Some flights
     %name SK100;
     %name SK101;
     %name SK102;
     
     # Two example passengers
     %name Bob;
     %name Joe;
     
     ######################### Reaction Rules ##############################
     
     # Rule that allow passengers to move through the airport
     Zone[w,x].(Pax[y] | $0) || Zone[x,z].$1 -&gt;
     	Zone[w,x].$0 || Zone[x,z].(Pax[y] | $1);
     
     
     # A passenger linked to a PaxRecord can proceed to the gate
     Zone[m,Boarding].(Pax[y] | $0) || Gate[x].$1 || PaxRecord[y,x] | $2 -&gt;
     	Zone[m,Boarding].$0 || Gate[x].(Pax[y] | $1) || PaxRecord[y,x] | $2;
     
     # A passenger magically disappears once they board the aircraft
     Gate[x].(Pax[y] | $0) -&gt; Gate[x].$0;
     
     ######################## Airport Model  ###############################
     
     Landside.(
     	Zone[-,CheckIn].(Pax[Bob] | Pax[Joe]) |
     	Zone[CheckIn,Security]
     ) |
     Airside.(
     	Zone[Security,DutyFree] |
     	Zone[DutyFree,GateLounge] |
     	Zone[GateLounge,Boarding]
     ) |
     Gates.(
     	Gate[SK100] |
     	Gate[SK102] |
     	Gate[SK101]
     ) | DB.(
     	PaxRecord[Joe,SK100] |
     	PaxRecord[Bob,SK101]
     );
     
     %check
</pre>
   
</div>
	
<div id="left">
	<div class="box">
	
<div class="node">
<p>
<a name="Table-of-Contents"></a>
Previous:&nbsp;<a rel="previous" accesskey="p" href="Example#Example">Example</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="index#Top">Top</a>
<hr>
</div>

<h2 class="unnumbered"></h2>

   <div class="contents">
<h2>Table of Contents</h2>
<ul>
<li><a name="toc_Top" href="index#Top">BigMC</a>
<li><a name="toc_Introduction" href="Introduction#Introduction">1 Introduction</a>
<ul>
<li><a href="Introduction#Introduction">1.1 A cautionary note</a>
<li><a href="Introduction#Introduction">1.2 About BigMC</a>
</li></ul>
<li><a name="toc_Obtaining-BigMC" href="Obtaining-BigMC#Obtaining-BigMC">2 Obtaining BigMC</a>
<ul>
<li><a href="Obtaining-BigMC#Obtaining-BigMC">2.1 Installation</a>
<li><a href="Obtaining-BigMC#Obtaining-BigMC">2.2 Configuration</a>
</li></ul>
<li><a name="toc_Invoking-bigmc" href="Invoking-bigmc#Invoking-bigmc">3 Invoking bigmc</a>
<ul>
<li><a href="Invoking-bigmc#Invoking-bigmc">3.1 Command Line Options</a>
</li></ul>
<li><a name="toc_BGM-file-structure" href="BGM-file-structure#BGM-file-structure">4 BGM file structure</a>
<ul>
<li><a href="BGM-file-structure#BGM-file-structure">4.1 Comments</a>
<li><a href="BGM-file-structure#BGM-file-structure">4.2 Control Definitions</a>
<li><a href="BGM-file-structure#BGM-file-structure">4.3 Names</a>
</li></ul>
<li><a name="toc_Term-language" href="Term-language#Term-language">5 Term language</a>
<ul>
<li><a href="Term-language#Term-language">5.1 Reaction Rules</a>
<li><a href="Term-language#Term-language">5.2 Model Definition</a>
</li></ul>
<li><a name="toc_Property-language" href="Property-language#Property-language">6 Property language</a>
<ul>
<li><a href="Property-language#Property-language">6.1 Property Expressions</a>
<li><a href="Property-language#Property-language">6.2 Pre-defined Scopes</a>
<li><a href="Property-language#Property-language">6.3 Pre-defined Predicates</a>
<ul>
<li><a href="Property-language#Property-language">6.3.1 <code>size()</code> Predicate</a>
<li><a href="Property-language#Property-language">6.3.2 <code>matches(</code><var>t</var><code>)</code> Predicate</a>
<li><a href="Property-language#Property-language">6.3.3 <code>empty() Predicate</code></a>
<li><a href="Property-language#Property-language">6.3.4 <code>terminal() Predicate</code></a>
</li></ul>
</li></ul>
<li><a name="toc_Checking" href="Checking#Checking">7 Checking</a>
<li><a name="toc_Example" href="Example#Example">8 Example</a>
<li><a name="toc_Table-of-Contents" href="Table-of-Contents#Table-of-Contents"></a>
</li></ul>
</div>


	</div>
	<div class="box">
<p>This work funded in part by the Danish Research Agency (grant no.:  2106-080046)
       and the <a href="http://itu.dk">IT University of Copenhagen</a> (the <a href="http://www.itu.dk/en/Forskning/Forskningsprojekter/Jingling-Genies">Jingling Genies project</a>)</p>
		
		<center>&copy; Copyright 2011 <a href="http://itu.dk/~gdpe/">Gian Perrone</a></center>
	</div>
</div>
</div>
</body>
</html>


